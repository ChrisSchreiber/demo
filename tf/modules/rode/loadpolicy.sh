#!/bin/sh
apk add curl
curl -vvvvvL --request POST \
  --url http://rode.rode-demo.svc.cluster.local:50052/v1alpha1/policies \
  --header 'Content-Type: application/json' \
  --data '{ "name": "foo", "description": "test", "regoContent": "package example1\n\npass = true {\n    count(violation_count) == 0\n}\n\nviolation_count[v] {\n    violations[v].pass == false\n}\n\nharbor_scan_finished[o] {\n    input.occurrences[i].noteName == \"projects/rode/notes/harbor\"\n    input.occurrences[i].kind == \"DISCOVERY\"\n    input.occurrences[i].discovered.discovered.analysisStatus == \"FINISHED_SUCCESS\"\n    o := input.occurrences[i]\n}\n\nharbor_scan_last[t] {\n    input.occurrences[i].noteName == \"projects/rode/notes/harbor\"\n    input.occurrences[i].kind == \"DISCOVERY\"\n    input.occurrences[i].discovered.discovered.analysisStatus == \"FINISHED_SUCCESS\"\n    t := input.occurrences[i].createTime\n}\n\nharbor_scan_vulnerability_low[o] {\n    input.occurrences[i].noteName == \"projects/rode/notes/harbor\"\n    input.occurrences[i].kind == \"VULNERABILITY\"\n    input.occurrences[i].vulnerability.effectiveSeverity == \"LOW\"\n    o := input.occurrences[i]\n}\n\nharbor_scan_vulnerability_low[o] {\n    input.occurrences[i].noteName == \"projects/rode/notes/harbor\"\n    input.occurrences[i].kind == \"VULNERABILITY\"\n    input.occurrences[i].vulnerability.effectiveSeverity == \"LOW\"\n    o := input.occurrences[i]\n}\n\nharbor_scan_vulnerability_medium[o] {\n    input.occurrences[i].noteName == \"projects/rode/notes/harbor\"\n    input.occurrences[i].kind == \"VULNERABILITY\"\n    input.occurrences[i].vulnerability.effectiveSeverity == \"MEDIUM\"\n    o := input.occurrences[i]\n}\n\nharbor_scan_vulnerability_high[o] {\n    input.occurrences[i].noteName == \"projects/rode/notes/harbor\"\n    input.occurrences[i].kind == \"VULNERABILITY\"\n    input.occurrences[i].vulnerability.effectiveSeverity == \"HIGH\"\n    o := input.occurrences[i]\n}\n\nviolations[result] {\n    finished := harbor_scan_finished\n    last := harbor_scan_last\n    result := {\n        \"pass\": count(finished) >= 1,\n        \"id\": \"harbor_scan_completed\",\n        \"name\": \"Harbor Scan\",\n        \"description\": \"Verify Harbor image scan completed\",\n        \"message\": sprintf(\"Harbor scanned image %v times. Last completed at %v\", [count(finished), last]),\n    }\n}\n\nviolations[result] {\n    args := {\n        \"max\": 10,\n    }\n    v := harbor_scan_vulnerability_low\n    c := count(v)\n    result := {\n        \"pass\": c <= args.max,\n        \"id\": \"harbor_scan_vulnerability_low\",\n        \"name\": \"Harbor low severity vulnerability count\",\n        \"description\": \"Verify scan result low severity vulnerability result\",\n        \"message\": sprintf(\"Harbor scan found %v low severity vulnerabilities (max: %v)\", [c, args.max]),\n    }\n}\n\nviolations[result] {\n    args := {\n        \"max\": 10,\n    }\n    v := harbor_scan_vulnerability_medium\n    c := count(v)\n    result := {\n        \"pass\": c <= args.max,\n        \"id\": \"harbor_scan_vulnerability_medium\",\n        \"name\": \"Harbor medium severity vulnerability count\",\n        \"description\": \"Verify scan result medium severity vulnerability result\",\n        \"message\": sprintf(\"Harbor scan found %v medium severity vulnerabilities (max: %v)\", [c, args.max]),\n    }\n}\n\nviolations[result] {\n    args := {\n        \"max\": 2,\n    }\n    v := harbor_scan_vulnerability_high\n    c := count(v)\n    result := {\n        \"pass\": c <= args.max,\n        \"id\": \"harbor_scan_vulnerability_high\",\n        \"name\": \"Harbor high severity vulnerability count\",\n        \"description\": \"Verify scan result high severity vulnerability result\",\n        \"message\": sprintf(\"Harbor scan found %v high severity vulnerabilities (max: %v)\", [c, args.max]),\n    }\n}" }'
